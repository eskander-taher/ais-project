// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Model "User" represents user data with an "id", "name", and relationships to "buildings" and "accessLogs."
model User {
  id         Int         @id @default(autoincrement())
  name       String      @unique

  accessLogs AccessLog[]
  buildings UserInBuilding[]

  createdAt DateTime @default(now())
}

// Model "Building" represents building data with an "id," "name," and relationships to "users."
model Building {
  id         Int         @id @default(autoincrement())
  name       String
 
  accessLogs AccessLog[]
  users UserInBuilding[]

  createdAt DateTime @default(now())
}

model UserInBuilding{
  id     Int   @id @default(autoincrement())
  user       User?     @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  building   Building? @relation(fields: [buildingId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId     Int? 
  buildingId Int? 
}

// Model "AccessLog" represents access log data with an "id," "accessStatus," "accessType," and relationships to "user" and "building."
model AccessLog {
  id           Int      @id @default(autoincrement())
  accessStatus String
  accessType   String
  accessTime   DateTime @default(now())

  userId     Int?
  buildingId Int?
  user       User?     @relation(fields: [userId], references: [id],onDelete: SetNull, onUpdate: Cascade)
  building   Building? @relation(fields: [buildingId], references: [id],onDelete: SetNull, onUpdate: Cascade)
}
